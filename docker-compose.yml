version: "3"

networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    build:
      context: ./mysql/image
      dockerfile: Dockerfile
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_PORT}:3306"
    command: "--innodb_use_native_aio=0"
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      SERVICE_TAGS: "${MYSQL_SERVICE_TAGS}"
      SERVICE_NAME: "${MYSQL_SERVICE_NAME}"
    networks:
      - laravel

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel

  # npm:
  #   image: node:13.7
  #   container_name: npm
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   entrypoint: ['npm']

  redis:
    build: ./redis
    container_name: redis
    volumes:
      - ./redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - laravel

  artisan:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel
